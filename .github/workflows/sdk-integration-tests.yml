name: SDK integration tests

on:
  push:
    branches:
      - DEV-354-sdk-pipeline
  workflow_dispatch:

env:
  BACKEND_REPO: cord-team/cord-backend
  PROJECT: sdk-integration-tests
  TEST_REPORT: sdk-test-report.xml
  PRIVATE_KEY: ${{ secrets.SDK_TESTS_PRIVATE_KEY }}
  TEST_DIR: ./src/cord/sdk_integration_tests/tests
  ENVIRONMENT: DEV

concurrency:
  group: cord-client-${{ github.ref }}-test
  cancel-in-progress: true

jobs:
  sdk-tests:
    name: Run SDK tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout backend repo
        uses: actions/checkout@v2
        with:
          repository: ${{ env.BACKEND_REPO }}
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Setup Poetry environment
        uses: ./.github/actions/setup-poetry-environment
        with:
          project: ${{ env.PROJECT }}
          cache-key: sdk-${{ hashFiles('projects/sdk-integration-tests/poetry.lock') }}

      - name: Setup FFMPEG
        uses: FedericoCarboni/setup-ffmpeg@v1

      - name: Get SDK
        run: |
          cd projects/${{ env.PROJECT }}
          python -m pip install --upgrade pip
          GIT_REPO=${{ github.repositoryUrl }}
          poetry add git+"${GIT_REPO/"git:"/"https:"}"
          poetry install

      - name: Run tests
        run: |
          cd projects/${{ env.PROJECT }}
          source .venv/bin/activate
          export CORD_ENV=${{ env.ENVIRONMENT }}
          export PRIVATE_KEY="${{ env.PRIVATE_KEY }}"
          python -m pytest ${{ env.TEST_DIR }} --rootdir=${{ env.TEST_DIR }} --verbose --junitxml=${{ env.TEST_REPORT }}

      - name: Upload test report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ env.TEST_REPORT }}
          path: projects/${{ env.PROJECT }}/${{ env.TEST_REPORT }}

      - name: Publish test report
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: projects/${{ env.PROJECT }}/${{ env.TEST_REPORT }}
          check_name: Test report